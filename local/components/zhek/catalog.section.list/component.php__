<?
if(!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true) die();
/** @var CBitrixComponent $this */
/** @var array $arParams */
/** @var array $arResult */
/** @var string $componentPath */
/** @var string $componentName */
/** @var string $componentTemplate */
/** @global CDatabase $DB */
/** @global CUser $USER */
/** @global CMain $APPLICATION */


/*************************************************************************
	Processing of received parameters
*************************************************************************/
if(!isset($arParams["CACHE_TIME"]))
	$arParams["CACHE_TIME"] = 36000;

$arParams["IBLOCK_TYPE"] = trim($arParams["IBLOCK_TYPE"]);
$arParams["IBLOCK_ID"] = intval($arParams["IBLOCK_ID"]);
$arParams["SECTION_ID"] = intval($arParams["SECTION_ID"]);
$arParams["SECTION_CODE"] = trim($arParams["SECTION_CODE"]);

$arParams["SECTION_URL"]=trim($arParams["SECTION_URL"]);

$arParams["TOP_DEPTH"] = intval($arParams["TOP_DEPTH"]);
if($arParams["TOP_DEPTH"] <= 0)
	$arParams["TOP_DEPTH"] = 2;
$arParams["COUNT_ELEMENTS"] = $arParams["COUNT_ELEMENTS"]!="N";
$arParams["ADD_SECTIONS_CHAIN"] = $arParams["ADD_SECTIONS_CHAIN"]!="N"; //Turn on by default

$arResult["SECTIONS"]=array();
/*************************************************************************
			Work with cache
*************************************************************************/
if($this->StartResultCache(false, ($arParams["CACHE_GROUPS"]==="N"? false: $USER->GetGroups())))
{
	if(!\Bitrix\Main\Loader::includeModule("iblock"))
	{
		$this->AbortResultCache();
		ShowError(GetMessage("IBLOCK_MODULE_NOT_INSTALLED"));
		return;
	}
	$arFilter = array(
		"ACTIVE" => "Y",
		"GLOBAL_ACTIVE" => "Y",
		"IBLOCK_ID" => $arParams["IBLOCK_ID"],
		"CNT_ACTIVE" => "Y",
	);

	$arSelect = array();
	if(array_key_exists("SECTION_FIELDS", $arParams) && !empty($arParams["SECTION_FIELDS"]) && is_array($arParams["SECTION_FIELDS"]))
	{
		foreach($arParams["SECTION_FIELDS"] as &$field)
		{
			if (!empty($field) && is_string($field))
				$arSelect[] = $field;
		}
		if (isset($field))
			unset($field);
	}

	if(!empty($arSelect))
	{
		$arSelect[] = "ID";
		$arSelect[] = "NAME";
		$arSelect[] = "SORT";
		$arSelect[] = "LEFT_MARGIN";
		$arSelect[] = "RIGHT_MARGIN";
		$arSelect[] = "DEPTH_LEVEL";
		$arSelect[] = "IBLOCK_ID";
		$arSelect[] = "IBLOCK_SECTION_ID";
		$arSelect[] = "LIST_PAGE_URL";
		$arSelect[] = "SECTION_PAGE_URL";
	}
	$boolPicture = empty($arSelect) || in_array('PICTURE', $arSelect);
	if(isset($arParams['SECTION_USER_FIELDS']) && !empty($arParams["SECTION_USER_FIELDS"]) && is_array($arParams["SECTION_USER_FIELDS"]))
	{
		foreach($arParams["SECTION_USER_FIELDS"] as &$field)
		{
			if(is_string($field) && preg_match("/^UF_/", $field))
				$arSelect[] = $field;
		}
		if (isset($field))
			unset($field);
	}

	$arResult["SECTION"] = false;
	$intSectionDepth = 0;
	if($arParams["SECTION_ID"]>0)
	{
		
		$arFilter["ID"] = $arParams["SECTION_ID"];
		$rsSections = CIBlockSection::GetList(array(), $arFilter, $arParams["COUNT_ELEMENTS"], $arSelect);
		$rsSections->SetUrlTemplates("", $arParams["SECTION_URL"]);
		$arResult["SECTION"] = $rsSections->GetNext();
	}
	elseif('' != $arParams["SECTION_CODE"])
	{
		$arFilter["=CODE"] = $arParams["SECTION_CODE"];
		$rsSections = CIBlockSection::GetList(array(), $arFilter, $arParams["COUNT_ELEMENTS"], $arSelect);
		$rsSections->SetUrlTemplates("", $arParams["SECTION_URL"]);
		$arResult["SECTION"] = $rsSections->GetNext();
	}
	
	if(is_array($arResult["SECTION"]))
	{
		unset($arFilter["ID"]);
		unset($arFilter["=CODE"]);
		//$arFilter['SECTION_ID'] = $arParams["SECTION_ID"];
		$arFilter["LEFT_MARGIN"]=$arResult["SECTION"]["LEFT_MARGIN"]+1;
		$arFilter["RIGHT_MARGIN"]=$arResult["SECTION"]["RIGHT_MARGIN"];
		$arFilter["<="."DEPTH_LEVEL"]=$arResult["SECTION"]["DEPTH_LEVEL"] + $arParams["TOP_DEPTH"];

		$ipropValues = new \Bitrix\Iblock\InheritedProperty\SectionValues($arResult["SECTION"]["IBLOCK_ID"], $arResult["SECTION"]["ID"]);
		$arResult["SECTION"]["IPROPERTY_VALUES"] = $ipropValues->getValues();

		$arResult["SECTION"]["PATH"] = array();
		$rsPath = CIBlockSection::GetNavChain($arResult["SECTION"]["IBLOCK_ID"], $arResult["SECTION"]["ID"]);
		$rsPath->SetUrlTemplates("", $arParams["SECTION_URL"]);
		while($arPath = $rsPath->GetNext())
		{
			$ipropValues = new \Bitrix\Iblock\InheritedProperty\SectionValues($arParams["IBLOCK_ID"], $arPath["ID"]);
			$arPath["IPROPERTY_VALUES"] = $ipropValues->getValues();
			$arResult["SECTION"]["PATH"][]=$arPath;
		}

        // элементы корневого раздела
        $arResult["SECTION"]["ELEMENTS"] = array();
        $arElementsSelect = Array(
			"IBLOCK_ID", 
			"SECTION_ID", 
			"ID", 
			"NAME", 
			"SORT", 
			"DETAIL_PAGE_URL", 
			"PREVIEW_TEXT",  
			"DETAIL_TEXT",
			"PROPERTY_EXT_LINK", 
			"PROPERTY_TARGET", 
			"PROPERTY_PHONE",
			"PROPERTY_EMAIL",
			"PROPERTY_ROOM",
			"PROPERTY_POST",
			"PROPERTY_FUNCTION",
			"PROPERTY_FILE",
			"PROPERTY_ATTACHMENTS",	//Вложение в структуре правого меню
			"PROPERTY_FILE_LINK",	//Вложение как ссылка
			"PROPERTY_FILE_COUNTER"	//Счетчик скачиваний файла
		);
        $arElementsFilter = Array("IBLOCK_ID" => $arParams["IBLOCK_ID"], "SECTION_ID" => $arResult["SECTION"]["ID"], "ACTIVE"=>"Y", "ACTIVE_TO"=>"Y");
        $rsElements = CIBlockElement::GetList(Array("SORT"=>"ASC","ID"=>"DESC"), $arElementsFilter, false, false, $arElementsSelect);
        while($arElement = $rsElements->GetNext())
        {

			$arElement['DEPTH_LEVEL'] = $arResult["SECTION"]['DEPTH_LEVEL'] + 1;
			
				$arButtons = CIBlock::GetPanelButtons(
					$arElement["IBLOCK_ID"],
					$arElement["ID"],
					0,
					array("SECTION_BUTTONS"=>false, "SESSID"=>false)
				);
				$arElement["ADD_LINK"] = $arButtons["edit"]["add_element"]["ACTION_URL"]??'';
				$arElement["EDIT_LINK"] = $arButtons["edit"]["edit_element"]["ACTION_URL"]??'';
				$arElement["DELETE_LINK"] = $arButtons["edit"]["delete_element"]["ACTION_URL"]??'';
			
				$arElement["ADD_LINK_TEXT"] = $arButtons["edit"]["add_element"]["TEXT"]??'';
				$arElement["EDIT_LINK_TEXT"] = $arButtons["edit"]["edit_element"]["TEXT"]??'';
				$arElement["DELETE_LINK_TEXT"] = $arButtons["edit"]["delete_element"]["TEXT"]??'';

            $arResult["SECTION"]["ELEMENTS"][$arElement["ID"]] = $arElement;
        }
	}
	else
	{
		$this->AbortResultCache();
		/*\Bitrix\Iblock\Component\Tools::process404(
			GetMessage("CATALOG_SECTION_NOT_FOUND")
			,($arParams["SET_STATUS_404"] === "Y")
			,($arParams["SET_STATUS_404"] === "Y")
			,($arParams["SHOW_404"] === "Y")
			,$arParams["FILE_404"]
		);*/
		$arResult["SECTION"] = array("ID"=>0, "DEPTH_LEVEL"=>0);
		$arFilter["<="."DEPTH_LEVEL"] = $arParams["TOP_DEPTH"];
	}
	$intSectionDepth = $arResult["SECTION"]['DEPTH_LEVEL'];
    $currentMaxDepth = 1;

	//ORDER BY
	$arSort = array(
		//"left_margin"=>"asc",
		"left_margin"=>"desc",
	);
	//EXECUTE
	$rsSections = CIBlockSection::GetList($arSort, $arFilter, $arParams["COUNT_ELEMENTS"], $arSelect);
	
	#+ begin
	/*
	$arFilter=array();
	$arFilter["SECTION_ID"]=$arParams["SECTION_ID"];
	$arFilter["ACTIVE"]="Y";
	$arFilter["GLOBAL_ACTIVE"]="Y";
	$arFilter["IBLOCK_ID"]=$arParams["IBLOCK_ID"];
	$arFilter["CNT_ACTIVE"]="Y";
	$rsSections = CIBlockSection::GetList($arSort, $arFilter, $arParams["COUNT_ELEMENTS"], $arSelect);
	*/
	#- end


	$rsSections->SetUrlTemplates("", $arParams["SECTION_URL"]);
	while($arSection = $rsSections->GetNext())
	{
		$ipropValues = new \Bitrix\Iblock\InheritedProperty\SectionValues($arSection["IBLOCK_ID"], $arSection["ID"]);
		$arSection["IPROPERTY_VALUES"] = $ipropValues->getValues();

		if ($boolPicture)
		{
			$mxPicture = false;
			$arSection["PICTURE"] = intval($arSection["PICTURE"]);
			if (0 < $arSection["PICTURE"])
				$mxPicture = CFile::GetFileArray($arSection["PICTURE"]);
			$arSection["PICTURE"] = $mxPicture;
			if ($arSection["PICTURE"])
			{
				$arSection["PICTURE"]["ALT"] = $arSection["IPROPERTY_VALUES"]["SECTION_PICTURE_FILE_ALT"];
				if ($arSection["PICTURE"]["ALT"] == "")
					$arSection["PICTURE"]["ALT"] = $arSection["NAME"];
				$arSection["PICTURE"]["TITLE"] = $arSection["IPROPERTY_VALUES"]["SECTION_PICTURE_FILE_TITLE"];
				if ($arSection["PICTURE"]["TITLE"] == "")
					$arSection["PICTURE"]["TITLE"] = $arSection["NAME"];
			}
		}
		$arSection['RELATIVE_DEPTH_LEVEL'] = $arSection['DEPTH_LEVEL'] - $intSectionDepth;
        if ($arSection['RELATIVE_DEPTH_LEVEL'] > $currentMaxDepth) {
            $currentMaxDepth = $arSection['RELATIVE_DEPTH_LEVEL'];
        }

		$arButtons = CIBlock::GetPanelButtons(
			$arSection["IBLOCK_ID"],
			0,
			$arSection["ID"],
			array("SESSID"=>false, "CATALOG"=>true)
		);
		$arSection["ADD_LINK"] = $arButtons["edit"]["add_section"]["ACTION_URL"]??'';
		$arSection["EDIT_LINK"] = $arButtons["edit"]["edit_section"]["ACTION_URL"]??'';
		$arSection["DELETE_LINK"] = $arButtons["edit"]["delete_section"]["ACTION_URL"]??'';

		$arSection["ADD_LINK_TEXT"] = $arButtons["edit"]["add_section"]["TEXT"]??'';

        // элементы раздела
        $arSection["ELEMENTS"] = array();

       $arElementsSelect = Array(
			"IBLOCK_ID", 
			"SECTION_ID", 
			"ID", 
			"NAME", 
			"SORT", 
			"DETAIL_PAGE_URL", 
			"PREVIEW_TEXT",  
			"DETAIL_TEXT",
			"PROPERTY_EXT_LINK", 	//Cсылка - в структуре правого меню (строка)
			"PROPERTY_TARGET", 
			"PROPERTY_PHONE",
			"PROPERTY_EMAIL",
			"PROPERTY_ROOM",
			"PROPERTY_POST",
			"PROPERTY_FUNCTION",
			"PROPERTY_FILE",
			"PROPERTY_ATTACHMENTS",	//Вложение - в структуре правого меню (файлы)
			"PROPERTY_FILE_LINK",	//Вложение как ссылка
			"PROPERTY_FILE_COUNTER"	//Счетчик скачиваний файла
		);
        $arElementsFilter = Array("IBLOCK_ID" => $arParams["IBLOCK_ID"], "SECTION_ID" => $arSection["ID"], "ACTIVE"=>"Y", "ACTIVE_TO"=>"Y");
        $rsElements = CIBlockElement::GetList(Array("SORT"=>"ASC","ID"=>"DESC"), $arElementsFilter, false, false, $arElementsSelect);
        while($arElement = $rsElements->GetNext())
        {
            $arElement['DEPTH_LEVEL'] = $arSection['DEPTH_LEVEL'] + 1;
            $arElement['RELATIVE_DEPTH_LEVEL'] = $arSection['RELATIVE_DEPTH_LEVEL'] + 1;

			$arButtons = CIBlock::GetPanelButtons(
				$arElement["IBLOCK_ID"],
				$arElement["ID"],
				$arSection["ID"],
				//0,
				array("SECTION_BUTTONS"=>false, "SESSID"=>false)
			);
			$arElement["ADD_LINK"] = $arButtons["edit"]["add_element"]["ACTION_URL"]??'';
			$arElement["EDIT_LINK"] = $arButtons["edit"]["edit_element"]["ACTION_URL"]??'';
			$arElement["DELETE_LINK"] = $arButtons["edit"]["delete_element"]["ACTION_URL"]??'';
		
			$arElement["ADD_LINK_TEXT"] = $arButtons["edit"]["add_element"]["TEXT"]??'';
			$arElement["EDIT_LINK_TEXT"] = $arButtons["edit"]["edit_element"]["TEXT"]??'';
			$arElement["DELETE_LINK_TEXT"] = $arButtons["edit"]["delete_element"]["TEXT"]??'';

            $arSection['ITEMS'][$arElement['SORT']][$arElement["ID"]] = $arElement;
        }

		$arResult["SECTIONS"][$arSection["ID"]]=$arSection;
	}

	$arResult["SECTIONS_COUNT"] = count($arResult["SECTIONS"]);

	$this->SetResultCacheKeys(array(
		"SECTIONS_COUNT",
		"SECTION",
	));

    // сборка секций и элементов в многомерный иерархический массив 
    while ($currentMaxDepth > 1) {
        foreach ($arResult["SECTIONS"] as $key => $section) {
            if ($section['RELATIVE_DEPTH_LEVEL'] == $currentMaxDepth) {
                $arResult["SECTIONS"][$section['IBLOCK_SECTION_ID']]['ITEMS'][$section['SORT']][] = $section;
                unset($arResult["SECTIONS"][$key]);
            }
        }
        $currentMaxDepth--;
    }
    
    // сортировка секций и элементов (кроме корневых)
	if (!function_exists('sortItems')){
    function sortItems (&$items) {
        foreach ($items as &$item)  {
            foreach ($item as &$value)  {
                if (isset($value['ITEMS'])) {                   
                    sortItems($value['ITEMS']);
                } 
            } 
        }
        ksort($items);
		}
	}

    foreach ($arResult["SECTIONS"] as &$section) {
        if (isset($section['ITEMS'])) {
            sortItems($section['ITEMS']);
        }
    }

    // объединим и отсортируем корневые секции с элементами корневого раздела
    foreach ($arResult["SECTIONS"] as &$section) {
        $arResult['ITEMS'][$section['SORT']][] = $section;
    }
    
    foreach ($arResult["SECTION"]['ELEMENTS'] as &$element) {
        $arResult['ITEMS'][$element['SORT']][] = $element;
    }

    if(isset($arResult['ITEMS'])){
        ksort($arResult['ITEMS']);
    }

    
    // обратная сборка в плоский массив   
    $tmpItems = array();
	if (!function_exists('flatArray')) {
		function flatArray (&$items, &$tmpItems) {
			foreach ($items as &$item)  {
				foreach ($item as &$value)  {
					if (isset($value['ITEMS'])) {
						$tmp = $value;
						unset($tmp['ITEMS']);
						$tmpItems[] = $tmp;
						
						flatArray($value['ITEMS'], $tmpItems);
						
					} else {                
						$tmpItems[] = $value;                    
					}
				} 
			}
		}
	}

    foreach ($arResult["ITEMS"] as &$items) {
        foreach ($items as &$item)  {
            if (isset($item['ITEMS'])) {
                $tmp = $item;
                unset($tmp['ITEMS']);
                $tmpItems[] = $tmp;
                
                flatArray($item['ITEMS'], $tmpItems);
                
            } else {
                $tmpItems[] = $item;
            }
        }
    }
    
    unset($section);
    unset($item);
    unset($value);
    unset($element);
    unset($arResult["SECTIONS"]);

    $arResult["ITEMS"] = $tmpItems;
    #+
    //if ($arResult["ITEMS"][0]["ID"]=="") unset($arResult["ITEMS"][0]);
    #-
	$this->IncludeComponentTemplate();
}

if($arResult["SECTIONS_COUNT"] > 0 || isset($arResult["SECTION"]))
{
	if($arParams["ADD_SECTIONS_CHAIN"] && isset($arResult["SECTION"]) && is_array($arResult["SECTION"]["PATH"]))
	{
		foreach($arResult["SECTION"]["PATH"] as $arPath)
		{
			if (isset($arPath["IPROPERTY_VALUES"]["SECTION_PAGE_TITLE"]) && $arPath["IPROPERTY_VALUES"]["SECTION_PAGE_TITLE"] != "")
				$APPLICATION->AddChainItem($arPath["IPROPERTY_VALUES"]["SECTION_PAGE_TITLE"], $arPath["~SECTION_PAGE_URL"]);
			else
				$APPLICATION->AddChainItem($arPath["NAME"], $arPath["~SECTION_PAGE_URL"]);
		}
	}
}
?>
